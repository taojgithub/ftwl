<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ftwl.ltp.dao.base.DemoBaseDao">
    <resultMap id="baseResultMap" type="com.ftwl.ltp.model.entity.Demo">
        <id column="ID" property="id" />
            <result column="NAME" property="name"/>
            <result column="CODE" property="code"/>
    </resultMap>
    <sql id="baseColumnList">
    ID,NAME,CODE
    </sql>
    <select id="get" parameterType="java.lang.String" resultMap="baseResultMap">
        select <include refid="baseColumnList"/>
        from ltp_demo
        where ID = #{id}
    </select>
    <delete id="delete" parameterType="java.util.Collection">
        delete from ltp_demo
        where 1=1 and ID in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
        #{item}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.ftwl.ltp.model.entity.Demo">
        insert into ltp_demo (
    ID,
    NAME,
    CODE
        )
        values (
    #{id, jdbcType=VARCHAR},
    #{name, jdbcType=VARCHAR},
    #{code, jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ftwl.ltp.model.entity.Demo">
        insert into ltp_demo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
            ID,
            </if>
            <if test="name != null">
            NAME,
            </if>
            <if test="code != null">
            CODE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
            #{id, jdbcType=VARCHAR},
            </if>
            <if test="name != null">
            #{name, jdbcType=VARCHAR},
            </if>
            <if test="code != null">
            #{code, jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <insert id="insertBatch" parameterType="java.util.List">
        insert into ltp_demo (ID,NAME,CODE
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
        #{item.id, jdbcType=VARCHAR},
        #{item.name, jdbcType=VARCHAR},
        #{item.code, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <update id="update" parameterType="com.ftwl.ltp.model.entity.Demo">
        update ltp_demo
        <set>
            NAME = #{name, jdbcType=VARCHAR},
            CODE = #{code, jdbcType=VARCHAR}
        </set>
        where ID = #{id}
    </update>
    <update id="updateSelective" parameterType="com.ftwl.ltp.model.entity.Demo">
        update ltp_demo
        <set>
                <if test="name != null">
                NAME = #{name, jdbcType=VARCHAR},
                </if>
                <if test="code != null">
                CODE = #{code, jdbcType=VARCHAR}
                </if>
        </set>
        where ID = #{id}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        insert into ltp_demo (ID,NAME,CODE
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
        #{item.id, jdbcType=VARCHAR},
        #{item.name, jdbcType=VARCHAR},
        #{item.code, jdbcType=VARCHAR}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        ID = IF(ID = VALUES(ID),ID,NULL)
            ,NAME = VALUES(NAME)
            ,CODE = VALUES(CODE)
    </update>
    <select id="listByEntity" parameterType="com.ftwl.ltp.model.entity.Demo" resultMap="baseResultMap">
        select <include refid="baseColumnList"/>
        from ltp_demo
        where 1=1
            <if test="name != null">
                AND NAME = #{name}
            </if>
            <if test="code != null">
                AND CODE = #{code}
            </if>
    </select>
    <update id="updateField">
        update ltp_demo
        <set>
                <if test="param2.name">
                NAME = #{param1.name, jdbcType=VARCHAR},
                </if>
                <if test="param2.code">
                CODE = #{param1.code, jdbcType=VARCHAR},
                </if>
        </set>
        where ID = #{param1.id}
    </update>
</mapper>